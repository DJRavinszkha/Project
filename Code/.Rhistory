adj_q_mrna_cholestasis_v_drained <- data.frame(q_val= mrna_cholestasis_v_drained_pvalue$qvalues[which(mrna_cholestasis_v_drained_pvalue$qvalues <= 0.05)])
deg_mirna_cholestasis_v_control <- match(rownames(adj_q_mirna_cholestasis_v_control),rownames(top_genes2))
deg_mirna_cholestasis_v_drained <- match(rownames(adj_q_mirna_cholestasis_v_drained),rownames(top_genes2))
deg_mrna_drained_v_control <- match(rownames(adj_q_mrna_drained_v_control),rownames(top_genes))
deg_mrna_cholestasis_v_control <- match(rownames(adj_q_mrna_cholestasis_v_control),rownames(top_genes))
deg_mrna_cholestasis_v_drained <- match(rownames(adj_q_mrna_cholestasis_v_drained),rownames(top_genes))
deg_mrna_drained_v_control<- top_genes[match(rownames(adj_q_mrna_drained_v_control),rownames(top_genes)),]
q_log_deg_mrna_dvco<- cbind(logFC= deg_mrna_drained_v_control$drained_v_control,adj_q_mrna_drained_v_control)
deg_mrna_cholestasis_v_control<- top_genes[match(rownames(adj_q_mrna_cholestasis_v_control),rownames(top_genes)),]
q_log_deg_mrna_chvco<- cbind(logFC= deg_mrna_cholestasis_v_control$cholestasis_v_control,adj_q_mrna_cholestasis_v_control)
deg_mrna_cholestasis_v_drained<- top_genes[match(rownames(adj_q_mrna_cholestasis_v_drained),rownames(top_genes)),]
q_log_deg_mrna_chvd<- cbind(logFC= deg_mrna_cholestasis_v_drained$cholestasis_v_drained,adj_q_mrna_cholestasis_v_drained)
View(q_log_deg_mrna_chvco)
View(q_log_deg_mrna_chvd)
View(key)
#========#
design <- matrix(nrow = (ncol(mrna)), ncol = 1)
colnames(design) <- "sampleName"
design[,1] <- colnames(mrna)
design <- merge(design, sampleGroups, by = "sampleName", sort = FALSE)
design_matrix_mrna <- model.matrix(~ 0 +  factor(sampleGroups$treatment.id) + factor(mrna.batches$batch.id) )
design1 <- model.matrix(~ 0 + factor(labels$treatment.id))
mrna.corrected <- removeBatchEffect(mrna, factor(labels$mRNA.batch.id), design=design1)
mrna.meta <- read.delim("../Data/metadata_mrna.csv", sep=',',header = TRUE, colClasses = 'character')
conf <- data.frame(sample.name = mrna.meta$Sample[1:28], sex = mrna.meta$gender[1:28], age = mrna.meta$age[1:28], bili.tot = mrna.meta$Bili..tot.[1:28])
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
conf$sex.id[conf$sex == "M"] <- 1 #change male to 1
conf$sex.id[conf$sex == "F"] <- 2 #change male to 1
sex<- factor(conf$sex.id)
age<- factor(conf$age)
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) )
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","age","sex")
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4")
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4")
cont_matrix <- makeContrasts (drained_v_control = drained - control,
cholestasis_v_control = cholestasis - control,
cholestasis_v_drained = cholestasis - drained,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, cont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
mrna_drained_v_control_pvalue <- qvalue(fit_contrast$p.value[,1])
mrna_cholestasis_v_control_pvalue <- qvalue(fit_contrast$p.value[,2])
mrna_cholestasis_v_drained_pvalue <- qvalue(fit_contrast$p.value[,3])
adj_q_mrna_drained_v_control <- data.frame(q_val= mrna_drained_v_control_pvalue$qvalues[which(mrna_drained_v_control_pvalue$qvalues <= 0.05)])
adj_q_mrna_cholestasis_v_control <- data.frame(q_val= mrna_cholestasis_v_control_pvalue$qvalues[which(mrna_cholestasis_v_control_pvalue$qvalues <= 0.05)])
adj_q_mrna_cholestasis_v_drained <- data.frame(q_val= mrna_cholestasis_v_drained_pvalue$qvalues[which(mrna_cholestasis_v_drained_pvalue$qvalues <= 0.05)])
deg_mrna_drained_v_control <- match(rownames(adj_q_mrna_drained_v_control),rownames(top_genes))
deg_mrna_cholestasis_v_control <- match(rownames(adj_q_mrna_cholestasis_v_control),rownames(top_genes))
deg_mrna_cholestasis_v_drained <- match(rownames(adj_q_mrna_cholestasis_v_drained),rownames(top_genes))
deg_mrna_drained_v_control<- top_genes[match(rownames(adj_q_mrna_drained_v_control),rownames(top_genes)),]
q_log_deg_mrna_dvco<- cbind(logFC= deg_mrna_drained_v_control$drained_v_control,adj_q_mrna_drained_v_control)
deg_mrna_cholestasis_v_control<- top_genes[match(rownames(adj_q_mrna_cholestasis_v_control),rownames(top_genes)),]
q_log_deg_mrna_chvco<- cbind(logFC= deg_mrna_cholestasis_v_control$cholestasis_v_control,adj_q_mrna_cholestasis_v_control)
deg_mrna_cholestasis_v_drained<- top_genes[match(rownames(adj_q_mrna_cholestasis_v_drained),rownames(top_genes)),]
q_log_deg_mrna_chvd<- cbind(logFC= deg_mrna_cholestasis_v_drained$cholestasis_v_drained,adj_q_mrna_cholestasis_v_drained)
View(q_log_deg_mrna_chvco)
View(key)
sampleGroups <- data.frame(treatment = labels$treatment, treatment.id = labels$treatment.id, sampleName = labels$sample.name)
# Get batch order mrna (copied from pca)
mrna.batches <- data.frame(batch = labels$mRNA.batch, batch.id = labels$mRNA.batch.id, file = labels$mRNA.file)
# Get batch order mirna (copied from pca)
mirna.batches <- data.frame(batch = labels$miRNA.batch, batch.id = labels$miRNA.batch.id, file = labels$mRNA.file)
#========#
design <- matrix(nrow = (ncol(mrna)), ncol = 1)
colnames(design) <- "sampleName"
design[,1] <- colnames(mrna)
design <- merge(design, sampleGroups, by = "sampleName", sort = FALSE)
design_matrix_mrna <- model.matrix(~ 0 +  factor(sampleGroups$treatment.id) + factor(mrna.batches$batch.id) )
design1 <- model.matrix(~ 0 + factor(labels$treatment.id))
mrna.corrected <- removeBatchEffect(mrna, factor(labels$mRNA.batch.id), design=design1)
mrna.meta <- read.delim("../Data/metadata_mrna.csv", sep=',',header = TRUE, colClasses = 'character')
conf <- data.frame(sample.name = mrna.meta$Sample[1:28], sex = mrna.meta$gender[1:28], age = mrna.meta$age[1:28], bili.tot = mrna.meta$Bili..tot.[1:28])
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
conf$sex.id[conf$sex == "M"] <- 1 #change male to 1
conf$sex.id[conf$sex == "F"] <- 2 #change male to 1
sex<- factor(conf$sex.id)
age<- factor(conf$age)
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) )
sex<- factor(conf$sex.id)
age<- factor(conf$age)
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) +sex + age  )
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","sex","age")
cont_matrix <- makeContrasts (drained_v_control = drained - control,
cholestasis_v_control = cholestasis - control,
cholestasis_v_drained = cholestasis - drained,
levels = design2)
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
conf$sex.id[conf$sex == "M"] <- 1 #change male to 1
conf$sex.id[conf$sex == "F"] <- 2 #change male to 1
sex<- factor(conf$sex.id)
age<- factor(conf$age)
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) + sex + age  )
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","sex","age")
sex<- factor(conf$sex.id)
age<- c(conf$age)
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) + sex + age  )
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","sex","age")
cont_matrix <- makeContrasts (drained_v_control = drained - control,
cholestasis_v_control = cholestasis - control,
cholestasis_v_drained = cholestasis - drained,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, cont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
top_genes <- topTable (fit_contrast, number = nrow(mrna), adjust = "BH")
View(conf)
#========#
design_matrix_mrna <- matrix(nrow = (ncol(mrna) -1), ncol = 1)
colnames(design_matrix_mrna) <- "SampleName"
design_matrix_mrna[,1] <- colnames(mrna[,2:length(mrna)])
design_matrix_mrna <- merge(design_matrix_mrna, sampleGroups, by =  "SampleName", sort = FALSE)
design_matrix_mrna <- model.matrix(~ 0 + factor(design_matrix_mrna[,3]) + factor(mrna.batches$batch.id))
colnames(design_matrix_mrna) <- c("cholestasis", "drained", "control")
#========#
design_matrix_mrna <- matrix(nrow = (ncol(mrna) -1), ncol = 1)
colnames(design_matrix_mrna) <- "SampleName"
design_matrix_mrna[,1] <- colnames(mrna[,2:length(mrna)])
design_matrix_mrna <- merge(design_matrix_mrna, sampleGroups, by =  "SampleName", sort = FALSE)
sampleGroups <- data.frame(treatment = labels$treatment, treatment.id = labels$treatment.id, sampleName = labels$sample.name)
# Get batch order mrna (copied from pca)
mrna.batches <- data.frame(batch = labels$mRNA.batch, batch.id = labels$mRNA.batch.id, file = labels$mRNA.file)
# Get batch order mirna (copied from pca)
mirna.batches <- data.frame(batch = labels$miRNA.batch, batch.id = labels$miRNA.batch.id, file = labels$mRNA.file)
#========#
design <- matrix(nrow = (ncol(mrna)), ncol = 1)
colnames(design) <- "sampleName"
design[,1] <- colnames(mrna)
design <- merge(design, sampleGroups, by = "sampleName", sort = FALSE)
design_matrix_mrna <- model.matrix(~ 0 +  factor(sampleGroups$treatment.id) + factor(mrna.batches$batch.id) )
design1 <- model.matrix(~ 0 + factor(labels$treatment.id))
mrna.corrected <- removeBatchEffect(mrna, factor(labels$mRNA.batch.id), design=design1)
mrna.meta <- read.delim("../Data/metadata_mrna.csv", sep=',',header = TRUE, colClasses = 'character')
conf <- data.frame(sample.name = mrna.meta$Sample[1:28], sex = mrna.meta$gender[1:28], age = mrna.meta$age[1:28], bili.tot = mrna.meta$Bili..tot.[1:28])
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
conf$sex.id[conf$sex == "M"] <- 1 #change male to 1
conf$sex.id[conf$sex == "F"] <- 2 #change male to 1
sex<- factor(conf$sex.id)
age<- c(conf$age)
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) + sex + age  )
sampleGroups <- data.frame(treatment = labels$treatment, treatment.id = labels$treatment.id, sampleName = labels$sample.name)
# Get batch order mrna (copied from pca)
mrna.batches <- data.frame(batch = labels$mRNA.batch, batch.id = labels$mRNA.batch.id, file = labels$mRNA.file)
# Get batch order mirna (copied from pca)
mirna.batches <- data.frame(batch = labels$miRNA.batch, batch.id = labels$miRNA.batch.id, file = labels$mRNA.file)
#========#
design <- matrix(nrow = (ncol(mrna)), ncol = 1)
colnames(design) <- "sampleName"
design[,1] <- colnames(mrna)
design <- merge(design, sampleGroups, by = "sampleName", sort = FALSE)
design_matrix_mrna <- model.matrix(~ 0 +  factor(sampleGroups$treatment.id) + factor(mrna.batches$batch.id) )
design1 <- model.matrix(~ 0 + factor(labels$treatment.id))
mrna.corrected <- removeBatchEffect(mrna, factor(labels$mRNA.batch.id), design=design1)
mrna.meta <- read.delim("../Data/metadata_mrna.csv", sep=',',header = TRUE, colClasses = 'character')
conf <- data.frame(sample.name = mrna.meta$Sample[1:28], sex = mrna.meta$gender[1:28], age = mrna.meta$age[1:28], bili.tot = mrna.meta$Bili..tot.[1:28])
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
conf$sex.id[conf$sex == "M"] <- 1 #change male to 1
conf$sex.id[conf$sex == "F"] <- 2 #change male to 1
sex<- factor(conf$sex.id)
age<- c(conf$age)
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) + sex + age  )
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","sex","age")
cont_matrix <- makeContrasts (
cholestasis_v_control = cholestasis - control,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, cont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
top_genes <- topTable (fit_contrast, p.value=0.05, number = nrow(mrna), adjust = "BH")
View(top_genes)
sampleGroups <- data.frame(treatment = labels$treatment, treatment.id = labels$treatment.id, sampleName = labels$sample.name)
# Get batch order mrna (copied from pca)
mrna.batches <- data.frame(batch = labels$mRNA.batch, batch.id = labels$mRNA.batch.id, file = labels$mRNA.file)
# Get batch order mirna (copied from pca)
mirna.batches <- data.frame(batch = labels$miRNA.batch, batch.id = labels$miRNA.batch.id, file = labels$mRNA.file)
#========#
design <- matrix(nrow = (ncol(mrna)), ncol = 1)
colnames(design) <- "sampleName"
design[,1] <- colnames(mrna)
design <- merge(design, sampleGroups, by = "sampleName", sort = FALSE)
design_matrix_mrna <- model.matrix(~ 0 +  factor(sampleGroups$treatment.id) + factor(mrna.batches$batch.id) )
design1 <- model.matrix(~ 0 + factor(labels$treatment.id))
mrna.corrected <- removeBatchEffect(mrna, factor(labels$mRNA.batch.id), design=design1)
mrna.meta <- read.delim("../Data/metadata_mrna.csv", sep=',',header = TRUE, colClasses = 'character')
conf <- data.frame(sample.name = mrna.meta$Sample[1:28], sex = mrna.meta$gender[1:28], age = mrna.meta$age[1:28], bili.tot = mrna.meta$Bili..tot.[1:28])
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
conf$sex.id[conf$sex == "M"] <- 1 #change male to 1
conf$sex.id[conf$sex == "F"] <- 2 #change male to 1
sex<- factor(conf$sex.id)
age<- c(conf$age)
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) + sex + age  )
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","sex","age")
cont_matrix <- makeContrasts (
cholestasis_v_control = cholestasis - control,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, cont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
top_genes <- topTable (fit_contrast, p.value=0.05, number = nrow(mrna), adjust = "BH")
sampleGroups <- data.frame(treatment = labels$treatment, treatment.id = labels$treatment.id, sampleName = labels$sample.name)
# Get batch order mrna (copied from pca)
mrna.batches <- data.frame(batch = labels$mRNA.batch, batch.id = labels$mRNA.batch.id, file = labels$mRNA.file)
# Get batch order mirna (copied from pca)
mirna.batches <- data.frame(batch = labels$miRNA.batch, batch.id = labels$miRNA.batch.id, file = labels$mRNA.file)
#========#
design <- matrix(nrow = (ncol(mrna)), ncol = 1)
colnames(design) <- "sampleName"
design[,1] <- colnames(mrna)
design <- merge(design, sampleGroups, by = "sampleName", sort = FALSE)
design_matrix_mrna <- model.matrix(~ 0 +  factor(sampleGroups$treatment.id) + factor(mrna.batches$batch.id) )
design1 <- model.matrix(~ 0 + factor(labels$treatment.id))
mrna.corrected <- removeBatchEffect(mrna, factor(labels$mRNA.batch.id), design=design1)
mrna.meta <- read.delim("../Data/metadata_mrna.csv", sep=',',header = TRUE, colClasses = 'character')
conf <- data.frame(sample.name = mrna.meta$Sample[1:28], sex = mrna.meta$gender[1:28], age = mrna.meta$age[1:28], bili.tot = mrna.meta$Bili..tot.[1:28])
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
conf$sex.id[conf$sex == "M"] <- 1 #change male to 1
# Version: 1.0   															                                #
# Date: 9-1-2020											             	                          #
# Authors: Ariadna Fosch i Muntané, ID: I6215203, Maastricht University       #
#          Jip de Kok, ID: I6119367 , Maastricht University                   #
#          Ravin Schmidl, ID: I6125866, Maastricht University                 #
#          Stefan Meier, ID: I6114194 , Maastricht University                 #
#=============================================================================#
#=========================================#
##         Install libraries             ##
#=========================================#
library(limma)
library(rstudioapi)
format <- function(){
# Get data in correct format
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
mrna = read.delim('../Data/GeneExpressionNormalized.txt', check.names = FALSE) #Load expression data
mirna = read.delim('../Data/miRNAexpression.txt', check.names = FALSE)        #Load miRNA expression data
colnames(mrna)[10] <- "FGS_10_410978_2_3_H"                                   #Change the name of one variable due to error
#Initialise a dataframe called labels, containing all:
# file/batch names and sample names
# batch numbers and an int id attached to it
# treatments and an int id attached to it
labels = read.delim("../Data/colNames.csv", sep = ',', header = FALSE, colClasses = 'character')
labels$V4 <- colnames(mrna[3:30])
key <- mrna[,1:2] # Key for maintaining gene symbol and entrez gene ID
labels$V1 <- colnames(mirna[2:29]) #maintaining names for mirna filenames
#Here we initialise batch number id's of mRNA's
labels$V5 <- substr(unlist(labels$V4), 8, 13)
labels$V6[labels$V5 == "410978"] <- 1 #set id 1 to mRNA batch
labels$V6[labels$V5 == "410979"] <- 2 #set id 2
labels$V6[labels$V5 == "410980"] <- 3 #set id 3
labels$V6[labels$V5 == "412287"] <- 4 #set id 4
#Here we initialise batch number id's for miRNA's
labels$V7 <- substr(unlist(labels$V1), 12, 23)
labels$V8[labels$V7 == "254606410403"] <- 1 #set id 1 to miRNA batch
labels$V8[labels$V7 == "254606410404"] <- 2 #set id 2
labels$V8[labels$V7 == "254606411109"] <- 5 #set id 3
labels$V8[labels$V7 == "254606410405"] <- 3 #set id 4
labels$V8[labels$V7 == "254606410413"] <- 4 #set id 5
#Change the names of the columns
colnames(labels) <- c("miRNA.file", "treatment", "sample.name", "mRNA.file", "mRNA.batch", "mRNA.batch.id", "miRNA.batch", "miRNA.batch.id")
#=== Here we initialise the treatment numbers ===
sampleGroups <- read.delim("../Data/SampleGroups.csv", sep = ',', header = TRUE, colClasses = 'character')
sampleGroups <- sampleGroups[,6:7]
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
labels$treatment.id[labels$treatment == "drained"] <- 2     #set id 2 to drained treatment
labels$treatment.id[labels$treatment == "control"] <- 3     #set id 3 to control treatment
# Column names are different for miRNA and mRNA datasets, but are conserved with sample names in SampleGroups.xlsx
#IE FGS_01 is the name of sample 1;
#where miRNA sample is US10063773_254606410403_S01_miRNA_107_Sep09_1_1 - 2;
#and mRNA sample is FGS_01_410978_1_1
#=== Here we change the columns names of mrna (mRNA samples) to the sample names ===
mrna = subset(mrna, select = -2)                     # Remove gene symbol column
columns = colnames(mrna)
columns[2:29] <- substr(unlist(columns[2:29]), 1, 6) #Only keep first 6 characters of column names
colnames(mrna) <- columns                            # Assign this to the actual column names
#=== Here we change the columns names of mirna (miRNA samples) to the sample names ===
#
# columns[[1]] <- 'miRNA'
# for (i in rep(2:length(colnames(mirna)))){
#   for ( j in rep(1:nrow(labels))){
#     if(colnames(mirna[i]) == labels[j,1]){
#       columns[[i]] = labels[j,3] # Assign correct column name to array
#       # print(labels[j,1])
#       # print(colnames(mirna[i]))
#       # print(labels[j, 3])
#       # print("======")
#     }
#   }
# }
#There is something wrong with naming as FGS_01 is not the first columns and last column is NA
#mrna
rownames(mrna) <- mrna[,1] # Set entrezid as index for mrna; can use key to find gene symbols based on index
mrna <- mrna[,2:29]        # Set mrna to only contain expression values
#mirna
rownames(mirna) <- mirna[,1] # Set mirna names as index for mirna
mirna <- mirna[,2:29]        # Set mirna to only contain expression values
colnames(mirna) <- labels$sample.name[order(labels$treatment.id)] ##REQUIRED!!!! in order to preserve order of miRNA sample naming
#=============================#
##   Create phenotype data   ##     # Do we need this?
#=============================#
# pheno.mrna = labels
# pheno.mrna[[1]] <- colnames(mrna)
# colnames(pheno.mrna) <- c("", "Subtype", "ER")
#
# # Set controls
# case <- pheno.mrna[,'Subtype'] == "cholestatic"
# pheno.mrna[case,3] <- 'case'
#
# # Set drained
# case <- pheno.mrna[,'Subtype'] == "drained"
# pheno.mrna[case,3] <- 'case'
#
# # set controls
# case <- pheno.mrna[,'Subtype'] == "control"
# pheno.mrna[case,3] <- 'control'
#
# # Order cases and controls
# pheno.mrna <- pheno.mrna[order(as.character(pheno.mrna$ER)),]
#
# # Set pheno.mirna which is identical to pheno.mrna
# pheno.mirna = pheno.mrna
#
#===============================#
## Summarised experiment class ##   #Do we need this?
#===============================#
# First we change the dataframes into matrices as the miRrna package works with matrices.
# pheno.mrna <- as.matrix(pheno.mrna)
# pheno.mirna <- as.matrix(pheno.mirna)
# mrna = data.matrix(mrna)
# mirna = data.matrix(mirna)
#
# # Fill NA's with mean for the time-being
# mrna[is.na(mrna)] <- mean(mrna, na.rm = TRUE)
# mirna[is.na(mirna)] <- mean(mirna, na.rm = TRUE)
#
# # Remove drained cases from mrna
# index = rep(TRUE, length(colnames(mrna)))
# for(i in 1:length(colnames(mrna))){
#   # if current column name is present in a list of all column names of cases:
#   if(colnames(mrna)[i] %in% pheno.mrna[pheno.mrna[,2]=="drained",1]){
#     index[i] <- FALSE
#   }
# }
# mrna <- mrna[,index]
#
# # Remove drained cases from mirna
# index = rep(TRUE, length(colnames(mirna)))
# for(i in 1:length(colnames(mirna))){
#   # if current column name is present in a list of all column names of cases:
#   if(colnames(mirna)[i] %in% pheno.mirna[pheno.mirna[,2]=="drained",1]){
#     index[i] <- FALSE
#   }
# }
# mirna <- mirna[,index]
#
# # Remove drained cases from the phenotype data
# pheno.mrna <- pheno.mrna[!(pheno.mrna[,2]=="drained"),]
# pheno.mirna <- pheno.mirna[!(pheno.mirna[,2]=="drained"),]
return(list(mrna, mirna, labels, key))
}
library(qvalue)
library(limma)
Data <- format() #Remember to run dataFormatting.R first before initialising data
mrna <- data.frame(Data[1]) #mRNA expression data (contains entrez ID as index)
mirna <- data.frame(Data[2]) #miRNA expression data (contains miRNA name as index)
labels <- data.frame(Data[3]) #batch and treatment id/labels for samples
key <- data.frame(Data[4]) #entrezID to genesymbol key
sampleGroups <- data.frame(treatment = labels$treatment, treatment.id = labels$treatment.id, sampleName = labels$sample.name)
# Get batch order mrna (copied from pca)
mrna.batches <- data.frame(batch = labels$mRNA.batch, batch.id = labels$mRNA.batch.id, file = labels$mRNA.file)
# Get batch order mirna (copied from pca)
mirna.batches <- data.frame(batch = labels$miRNA.batch, batch.id = labels$miRNA.batch.id, file = labels$mRNA.file)
#========#
design <- matrix(nrow = (ncol(mrna)), ncol = 1)
colnames(design) <- "sampleName"
design[,1] <- colnames(mrna)
design <- merge(design, sampleGroups, by = "sampleName", sort = FALSE)
design_matrix_mrna <- model.matrix(~ 0 +  factor(sampleGroups$treatment.id) + factor(mrna.batches$batch.id) )
design1 <- model.matrix(~ 0 + factor(labels$treatment.id))
mrna.corrected <- removeBatchEffect(mrna, factor(labels$mRNA.batch.id), design=design1)
mrna.meta <- read.delim("../Data/metadata_mrna.csv", sep=',',header = TRUE, colClasses = 'character')
conf <- data.frame(sample.name = mrna.meta$Sample[1:28], sex = mrna.meta$gender[1:28], age = mrna.meta$age[1:28], bili.tot = mrna.meta$Bili..tot.[1:28])
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
conf$sex.id[conf$sex == "M"] <- 1 #change male to 1
conf$sex.id[conf$sex == "F"] <- 2 #change male to 1
sex<- factor(conf$sex.id)
age<- c(conf$age)
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) + sex + age  )
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","sex","age")
cont_matrix <- makeContrasts (drained_v_control = drained - control,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, cont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
cont_matrix <- makeContrasts (chvco = cholestatic - control,
levels = design2)
cont_matrix <- makeContrasts (chvco = cholestatis - control,
levels = design2)
fit <- lmFit(mrna, design2)
cont_matrix <- makeContrasts (chvco = cholestasis - control,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, cont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
cont_matrix <- makeContrasts (chvd = cholestasis - drained,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, cont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
sampleGroups <- data.frame(treatment = labels$treatment, treatment.id = labels$treatment.id, sampleName = labels$sample.name)
# Get batch order mrna (copied from pca)
mrna.batches <- data.frame(batch = labels$mRNA.batch, batch.id = labels$mRNA.batch.id, file = labels$mRNA.file)
# Get batch order mirna (copied from pca)
mirna.batches <- data.frame(batch = labels$miRNA.batch, batch.id = labels$miRNA.batch.id, file = labels$mRNA.file)
#========#
design <- matrix(nrow = (ncol(mrna)), ncol = 1)
colnames(design) <- "sampleName"
design[,1] <- colnames(mrna)
design <- merge(design, sampleGroups, by = "sampleName", sort = FALSE)
design_matrix_mrna <- model.matrix(~ 0 +  factor(sampleGroups$treatment.id) + factor(mrna.batches$batch.id) )
design1 <- model.matrix(~ 0 + factor(labels$treatment.id))
mrna.corrected <- removeBatchEffect(mrna, factor(labels$mRNA.batch.id), design=design1)
mrna.meta <- read.delim("../Data/metadata_mrna.csv", sep=',',header = TRUE, colClasses = 'character')
conf <- data.frame(sample.name = mrna.meta$Sample[1:28], sex = mrna.meta$gender[1:28], age = mrna.meta$age[1:28], bili.tot = mrna.meta$Bili..tot.[1:28])
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
conf$sex.id[conf$sex == "M"] <- 1 #change male to 1
conf$sex.id[conf$sex == "F"] <- 2 #change male to 1
sex<- factor(conf$sex.id)
age<- c(conf$age)
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) + sex + age  )
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","sex","age")
acont_matrix <- makeContrasts (chvd = cholestasis - drained,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, cont_matrix)
fit_contrast <- eBayes(fit_contrast)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, acont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
atop_genes <- topTable (fit_contrast, p.value=0.05, number = nrow(mrna), adjust = "BH")
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","sex","age")
bcont_matrix <- makeContrasts (chvco = cholestasis - control,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, acont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
btop_genes <- topTable (fit_contrast, p.value=0.05, number = nrow(mrna), adjust = "BH")
bcont_matrix <- makeContrasts (chvco = cholestasis - control,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, bcont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
btop_genes <- topTable (fit_contrast, p.value=0.05, number = nrow(mrna), adjust = "BH")
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","sex","age")
ccont_matrix <- makeContrasts (dvco = drained - control,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, ccont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
ctop_genes <- topTable (fit_contrast, p.value=0.05, number = nrow(mrna), adjust = "BH")
colnames(design2) <- c("cholestasis", "drained", "control", "batch2","batch3","batch4","sex","age")
dcont_matrix <- makeContrasts (chvco = cholestasis - control,
chvd= cholestasis - drained,
dvco = drained - control,
levels = design2)
fit <- lmFit(mrna, design2)
fit_contrast <- contrasts.fit(fit, dcont_matrix)
fit_contrast <- eBayes(fit_contrast)
results <- decideTests(fit_contrast)
summary(results)
dtop_genes <- topTable (fit_contrast, p.value=0.05, number = nrow(mrna), adjust = "BH")
View(dtop_genes)
View(ctop_genes)
View(btop_genes)
View(atop_genes)
#========#
design <- matrix(nrow = (ncol(mrna)), ncol = 1)
colnames(design) <- "sampleName"
design[,1] <- colnames(mrna)
design <- merge(design, sampleGroups, by = "sampleName", sort = FALSE)
design_matrix_mrna <- model.matrix(~ 0 +  factor(sampleGroups$treatment.id) + factor(mrna.batches$batch.id) )
design1 <- model.matrix(~ 0 + factor(labels$treatment.id))
mrna.corrected <- removeBatchEffect(mrna, factor(labels$mRNA.batch.id), design=design1)
mrna.meta <- read.delim("../Data/metadata_mrna.csv", sep=',',header = TRUE, colClasses = 'character')
conf <- data.frame(sample.name = mrna.meta$Sample[1:28], sex = mrna.meta$gender[1:28], age = mrna.meta$age[1:28], bili.tot = mrna.meta$Bili..tot.[1:28])
labels$treatment.id[labels$treatment == "cholestatic"] <- 1 #set id 1 to cholestatic treatment
conf$sex.id[conf$sex == "M"] <- 1 #change male to 1
conf$sex.id[conf$sex == "F"] <- 2 #change male to 1
View(conf)
labels$mRNA.batch.id
mrna.batches
design2 <- model.matrix(~ 0 + factor(labels$treatment.id) + factor(labels$mRNA.batch.id) + sex + age)
